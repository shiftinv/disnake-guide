"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[173],{5318:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return h}});var a=n(7378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},l=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(n),h=i,u=m["".concat(p,".").concat(h)]||m[h]||d[h]||o;return n?a.createElement(u,r(r({ref:t},l),{},{components:n})):a.createElement(u,r({ref:t},l))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var c=2;c<o;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3023:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return l},default:function(){return m}});var a=n(5773),i=n(808),o=(n(7378),n(5318)),r=["components"],s={},p="What are interactions?",c={unversionedId:"interactions/interactions",id:"interactions/interactions",title:"What are interactions?",description:"An Interaction is the message that your bot receives when a user initiates an application command or a message",source:"@site/docs/interactions/interactions.mdx",sourceDirName:"interactions",slug:"/interactions/",permalink:"/interactions/",editUrl:"https://github.com/DisnakeDev/guide/edit/main/guide/docs/interactions/interactions.mdx",tags:[],version:"current",lastUpdatedBy:"shiftinv",lastUpdatedAt:1641924670,formattedLastUpdatedAt:"1/11/2022",frontMatter:{},sidebar:"guideSidebar",previous:{title:"Creating cogs/extensions",permalink:"/getting-started/using-cogs"},next:{title:"Application Commands",permalink:"/interactions/application-commands"}},l=[{value:"Interactions and Bot Users",id:"interactions-and-bot-users",children:[],level:2},{value:"Responding to interactions",id:"responding-to-interactions",children:[{value:"<code>interaction.response</code>",id:"interactionresponse",children:[],level:3},{value:"<code>interaction.followup</code>",id:"interactionfollowup",children:[],level:3}],level:2}],d={toc:l};function m(e){var t=e.components,n=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"what-are-interactions"},"What are interactions?"),(0,o.kt)("p",null,"An ",(0,o.kt)("strong",{parentName:"p"},"Interaction")," is the message that your bot receives when a user initiates an application command or a message\ncomponent."),(0,o.kt)("h2",{id:"interactions-and-bot-users"},"Interactions and Bot Users"),(0,o.kt)("p",null,"We're all used to the way that Discord bots have worked for a long time. You make an application in\n",(0,o.kt)("a",{parentName:"p",href:"https://discord.com/developers/applications"},"Developer Portal"),", make a new bot user, and copy the token. Interactions\nbring something entirely new - the ability to interact with an application ",(0,o.kt)("em",{parentName:"p"},"without needing a bot user in the guild"),".\nResponding to the interaction doesn't require a bot token."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"disnake")," is primarily focused on using the gateway events, so you still need a bot user. Check out\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/hikari-py/hikari"},(0,o.kt)("inlineCode",{parentName:"a"},"hikari-py"))," with their REST-API part for this purpose."),(0,o.kt)("p",null,"Welcome to the new world."),(0,o.kt)("h2",{id:"responding-to-interactions"},"Responding to interactions"),(0,o.kt)("p",null,'You have only 3 seconds to respond to the interaction. If do not have time to do it, Discord will shown "This\ninteraction failed" error.'),(0,o.kt)("p",null,"In fact, there are 3 types of interactions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.disnake.dev/en/latest/api.html#applicationcommandinteraction"},(0,o.kt)("inlineCode",{parentName:"a"},"ApplicationCommandInteraction"))," (for\n",(0,o.kt)("a",{parentName:"li",href:"./application-commands"},"application commands"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.disnake.dev/en/latest/api.html#messageinteraction"},(0,o.kt)("inlineCode",{parentName:"a"},"MessageInteraction"))," (for\n",(0,o.kt)("a",{parentName:"li",href:"./message-components"},"message components"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.disnake.dev/en/latest/api.html#interaction"},(0,o.kt)("inlineCode",{parentName:"a"},"Interaction"))," (a base class, usually not used)")),(0,o.kt)("p",null,"But responding is the same for both interactions types."),(0,o.kt)("h3",{id:"interactionresponse"},(0,o.kt)("inlineCode",{parentName:"h3"},"interaction.response")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.disnake.dev/en/latest/api.html#disnake.Interaction.response"},(0,o.kt)("inlineCode",{parentName:"a"},"response"))," attribute returns a\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.disnake.dev/en/latest/api.html#disnake.InteractionResponse"},(0,o.kt)("inlineCode",{parentName:"a"},"InteractionResponse"))," instance that has 4\nusable methods. A response can ",(0,o.kt)("strong",{parentName:"p"},"only be done once"),". If you want to send secondary messages, consider using\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.disnake.dev/en/latest//api.html#disnake.Interaction.followup"},(0,o.kt)("inlineCode",{parentName:"a"},"followup"))," webhook instead."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://docs.disnake.dev/en/latest/api.html#disnake.InteractionResponse.send_message"},(0,o.kt)("inlineCode",{parentName:"a"},"send_message"))," - Sends\nresponse message"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://docs.disnake.dev/en/latest/api.html#disnake.InteractionResponse.edit_message"},(0,o.kt)("inlineCode",{parentName:"a"},"edit_message"))," - Edits\noriginal message, you're unable to use this in application command because there are no message while you responding"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://docs.disnake.dev/en/latest/api.html#disnake.InteractionResponse.defer"},(0,o.kt)("inlineCode",{parentName:"a"},"defer"))," - Defers the interaction"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://docs.disnake.dev/en/latest/api.html#disnake.InteractionResponse.is_done"},(0,o.kt)("inlineCode",{parentName:"a"},"is_done"))," - Indicates whether an\ninteraction response has been done before")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("a",{parentName:"p",href:"https://docs.disnake.dev/en/latest/api.html#disnake.InteractionResponse.defer"},(0,o.kt)("inlineCode",{parentName:"a"},"defer"))," works differently depending on\nthe type of interaction. It creates ",(0,o.kt)("em",{parentName:"p"},'"Bot is thinking..."')," message for application commands and doesn't throw ",(0,o.kt)("em",{parentName:"p"},'"This\ninteraction failed"')," if you're not going to respond to message components."))),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you're going to run long processes (more than 3 seconds) while responding, you must first defer the interaction. Then\nwhen your response is ready you can edit the message using\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.disnake.dev/en/latest/api.html#disnake.Interaction.edit_original_message"},(0,o.kt)("inlineCode",{parentName:"a"},"edit_original_message"))," method."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="example.py"',title:'"example.py"'},'@bot.slash_command()\nasync def ping(inter: ApplicationCommandInteraction):\n    await inter.response.send_message("Pong!")\n\n\n@bot.slash_command()\nasync def defer(inter: ApplicationCommandInteraction):\n    await inter.response.defer()\n    await asyncio.sleep(10)\n    await inter.edit_original_message("The wait is over, my comrades!")\n')),(0,o.kt)("h3",{id:"interactionfollowup"},(0,o.kt)("inlineCode",{parentName:"h3"},"interaction.followup")),(0,o.kt)("p",null,"Often used when you need to send secondary messages after responding."))}m.isMDXComponent=!0}}]);